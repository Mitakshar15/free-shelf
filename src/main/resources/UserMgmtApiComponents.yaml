components:
  schemas:
    # ************************ Common Api Responses ******************
    BaseApiResponse:
      type: object
      discriminator:
        propertyName: respType

    UserMgmtBaseApiResponse:
      type: object
      properties:
      allOf:
        - $ref: '#/components/schemas/BaseApiResponse'

    # ************************ User Api Responses ******************

    AuthResponse:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/AuthResponseDto'
      allOf:
        - $ref: '#/components/schemas/UserMgmtBaseApiResponse'

    ActivationResponse:
      type: object
      properties:
      allOf:
        - $ref: '#/components/schemas/UserMgmtBaseApiResponse'


    ResetPasswordResponse:
      type: object
      properties:
      allOf:
        - $ref: "#/components/schemas/UserMgmtBaseApiResponse"


    # ********************** User Api Requests ********************

    SignUpRequest:
      type: object
      required:
        - email
        - password
        - username
      properties:
        username:
          type: string
          description: First name of the user.
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [HOST, RENTER, ADMIN]
        password:
          type: string
          description: User's password.
        email:
          type: string
          format: email
          description: User's email address.


    SignInRequest:
      type: object
      required:
        -email
        -password
      properties:
        email:
          type: string
        password:
          type: string

    ActivationRequest:
      type: object
      required:
        - activationCode
      properties:
        activationCode:
          type: string

    CreateRoleRequest:
      type: object
      required:
        - role
      properties:
        role:
          type: string

    AssignRoleRequest:
      type: object
      properties:
        roles:
          type: array
          items:
            type: string

    # *************** User Service DTO's **************
    AuthResponseDto:
      type: object
      required:
        -jwt
      properties:
        token:
          type: string
        userName:
          type: string
        provider:
          type: string

    UpdateProfileRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        bio:
          type: string
        profileImageUrl:
          type: string

    UserProfileResponse:
      type: object
      properties:
        data:
          type: object
          $ref: '#/components/schemas/UserDto'
      allOf:
        - $ref: "#/components/schemas/UserMgmtBaseApiResponse"

    UserDto:
      type: object
      required:
        - firstName
        - email
        - userName
        - password
        - status
        - role
        - provider
      properties:
        firstName:
          type: string
          maxLength: 50
          description: User's first name
        lastName:
          type: string
          maxLength: 50
          description: User's last name
        email:
          type: string
          format: email
          description: User's email address (must be unique)
        userName:
          type: string
          description: User's username (must be unique)
        phoneNumber:
          type: string
          maxLength: 15
          description: User's phone number
        status:
          type: string
          enum: [PENDING, ACTIVE, SUSPENDED, DEACTIVATED]
          default: PENDING
          description: Current status of the user account
        role:
          type: string
          enum: [HOST, RENTER, ADMIN]
          description: Role assigned to the user
        profile:
          $ref: '#/components/schemas/UserProfile'
          description: User's detailed profile information
        lastLoginAt:
          type: string
          format: local-date-time
          description: Timestamp of user's last login
        accountVerified:
          type: boolean
          default: false
          description: Indicates if the user account has been verified
        provider:
          type: string
          enum: [LOCAL, GOOGLE]
          default: LOCAL
          description: Authentication provider used by the user
        providerId:
          type: string
          description: External ID from the authentication provider

    UserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique identifier for the profile
        bio:
          type: string
          maxLength: 1000
          description: User's biography or about section
        profileImageUrl:
          type: string
          description: URL to the user's profile image
        address:
          $ref: '#/components/schemas/Address'
          description: User's address information

    Address:
      type: object
      properties:
        street:
          type: string
          maxLength: 100
          description: Street address
        city:
          type: string
          maxLength: 50
          description: City
        state:
          type: string
          maxLength: 50
          description: State or province
        zipCode:
          type: string
          maxLength: 10
          description: Postal or zip code
        country:
          type: string
          maxLength: 50
          description: Country
        latitude:
          type: number
          format: big-decimal
          description: Latitude coordinate
        longitude:
          type: number
          format: big-decimal
          description: Longitude coordinate



